{"version":3,"file":"main.js","mappings":"03BAIMA,EAAQ,ICHOC,WACnB,c,4FAAc,SACZC,KAAKC,KAAOC,aAAaC,QAAQ,YAAcC,KAAKC,MAAMH,aAAaC,QAAQ,aAAe,G,4CAGhG,SAAQG,GACNA,EAAKC,WAAY,EACjBD,EAAKE,MAAQR,KAAKC,KAAKQ,OAAS,EAChCT,KAAKC,KAAKS,KAAKJ,GACfJ,aAAaS,QAAQ,WAAYP,KAAKQ,UAAUZ,KAAKC,S,wBAIvD,SAAWO,GACTR,KAAKC,KAAOD,KAAKC,KAAKY,QAAO,SAACC,GAAD,OAAUA,EAAKN,QAAUA,KACtDR,KAAKC,KAAOD,KAAKC,KAAKc,KAAI,SAACD,EAAME,GAAP,cAAmBF,GAAnB,IAAyBN,MAAOQ,EAAI,OAC9Dd,aAAaS,QAAQ,WAAYP,KAAKQ,UAAUZ,KAAKC,S,wBAGvD,SAAWK,GACTN,KAAKC,KAAKK,EAAKE,MAAQ,GAAKF,EAC5BJ,aAAaS,QAAQ,WAAYP,KAAKQ,UAAUZ,KAAKC,S,4BAGvD,WACED,KAAKC,KAAOD,KAAKC,KAAKY,QAAO,SAACC,GAAD,OAAWA,EAAKP,aAC7CP,KAAKC,KAAOD,KAAKC,KAAKc,KAAI,SAACD,EAAME,GAAP,cAAmBF,GAAnB,IAAyBN,MAAOQ,EAAI,OAC9Dd,aAAaS,QAAQ,WAAYP,KAAKQ,UAAUZ,KAAKC,Y,sEA3BpCF,IDMfkB,EAAa,SAAbA,IACJ,IAAIC,EAAW,GACfpB,EAAMG,KAAKkB,SAAQ,SAACL,GAClBI,GAAY,8BAAJ,OAAkCJ,EAAKP,UAAY,UAAY,GAA/D,wGACgDO,EAAKN,MADrD,aAC+DM,EAAKM,YADpE,oIAMVC,SAASC,cAAc,eAAeC,UAAYL,EAElD,IAAMM,EAAQH,SAASC,cAAc,UACrCE,EAAMC,iBAAiB,YAAY,SAACC,GAClC,GAAkB,KAAdA,EAAEC,SAAyC,KAAvBH,EAAMI,MAAMC,OAAe,CACjD,IAAMC,EAAU,CACdV,YAAaI,EAAMI,OAErBJ,EAAMI,MAAQ,GACd9B,EAAMiC,QAAQD,GACdb,QAIUI,SAASW,iBAAiB,UAClCb,SAAQ,SAACL,GACbA,EAAKW,iBAAiB,SAAS,SAACC,GAC9B,IAAMlB,EAAQkB,EAAEO,OAAOC,WAAWZ,cAAc,cAAca,GAC9DrC,EAAMsC,YAAY5B,GAClBS,UAKSI,SAASW,iBAAiB,cAClCb,SAAQ,SAACL,GACZA,EAAKW,iBAAiB,QAAQ,SAACC,GAC7B,IAAMlB,EAAQkB,EAAEO,OAAOE,GACvB,GAAkC,KAA9BT,EAAEO,OAAOI,UAAUR,OAAvB,CAKA,IACMvB,EAAO,CACXc,YAFkBM,EAAEO,OAAOI,UAG3B7B,MAAAA,GAEFV,EAAMwC,WAAWhC,GACjBW,SAVES,EAAEO,OAAOI,UAAYvC,EAAMG,MAAMO,EAAQ,GAAGY,kBAelCC,SAASW,iBAAiB,YAClCb,SAAQ,SAACL,GACfA,EAAKW,iBAAiB,SAAS,SAACC,GAC9B,IAAMlB,EAAQkB,EAAEO,OAAOC,WAAWZ,cAAc,cAAca,GACxD7B,EAAOR,EAAMG,KAAKsC,MAAK,SAACzB,GAAD,OAAUA,EAAKN,SAAWA,KACvDF,EAAKC,UAAYmB,EAAEO,OAAOO,QAC1B1C,EAAMwC,WAAWhC,GACjBW,WAKWI,SAASC,cAAc,mBAC/BG,iBAAiB,SAAS,WACjC3B,EAAM2C,iBACNxB,OAGFA,I","sources":["webpack://webpack-starters/./src/index.js","webpack://webpack-starters/./src/modules/list.js"],"sourcesContent":["import './style.css';\nimport ListTodo from './modules/list';\n\n// triggers constructor to run to create the list and create todos list\nconst todos = new ListTodo();\n\n// constuctor todoList\nconst renderList = () => {\n  let todoList = '';\n  todos.list.forEach((item) => {\n    todoList += `<li class=\"todo-li\"><input ${item.completed ? 'checked' : ''} type=\"checkbox\" class=\"checked\">\n          <p contenteditable=\"true\" class=\"todo-edit\" id=\"${item.index}\">${item.description}</p>\n          <i class=\"fas fa-trash icon trash\"></i>\n          <i class=\"fas fa-ellipsis-v icon drag\"></i>\n        </li>`;\n  });\n  document.querySelector('.todo-items').innerHTML = todoList;\n  // const myList = storageManager.getData();\n  const input = document.querySelector('.input');\n  input.addEventListener('keypress', (e) => {\n    if (e.keyCode === 13 && input.value.trim() !== '') {\n      const newTodo = {\n        description: input.value,\n      };\n      input.value = '';\n      todos.addTodo(newTodo);\n      renderList();\n    }\n  });\n  // add event listener to delete todo\n  const trash = document.querySelectorAll('.trash');\n  trash.forEach((item) => {\n    item.addEventListener('click', (e) => {\n      const index = e.target.parentNode.querySelector('.todo-edit').id;\n      todos.removeTodo(+index);\n      renderList();\n    });\n  });\n\n  // add event listener to edit todo\n  const edit = document.querySelectorAll('.todo-edit');\n  edit.forEach((item) => {\n    item.addEventListener('blur', (e) => {\n      const index = e.target.id;\n      if (e.target.innerText.trim() === '') {\n        e.target.innerText = todos.list[+index - 1].description;\n        return;\n      }\n\n      const description = e.target.innerText;\n      const todo = {\n        description,\n        index,\n      };\n      todos.updateTodo(todo);\n      renderList();\n    });\n  });\n\n  // delete checked todos one or all\n  const checked = document.querySelectorAll('.checked');\n  checked.forEach((item) => {\n    item.addEventListener('click', (e) => {\n      const index = e.target.parentNode.querySelector('.todo-edit').id;\n      const todo = todos.list.find((item) => item.index === +index);\n      todo.completed = e.target.checked;\n      todos.updateTodo(todo);\n      renderList();\n    });\n  });\n};\n\nconst clearAll = document.querySelector('.clear-complete');\nclearAll.addEventListener('click', () => {\n  todos.clearCompleted();\n  renderList();\n});\n\nrenderList();\n","// Class of Todos with list of todos\nexport default class listTodo {\n  constructor() {\n    this.list = localStorage.getItem('todoList') ? JSON.parse(localStorage.getItem('todoList')) : [];\n  }\n\n  addTodo(todo) {\n    todo.completed = false;\n    todo.index = this.list.length + 1;\n    this.list.push(todo);\n    localStorage.setItem('todoList', JSON.stringify(this.list));\n  }\n\n  // remove todo & update index +1\n  removeTodo(index) {\n    this.list = this.list.filter((item) => item.index !== index);\n    this.list = this.list.map((item, i) => ({ ...item, index: i + 1 }));\n    localStorage.setItem('todoList', JSON.stringify(this.list));\n  }\n\n  updateTodo(todo) {\n    this.list[todo.index - 1] = todo;\n    localStorage.setItem('todoList', JSON.stringify(this.list));\n  }\n\n  clearCompleted() {\n    this.list = this.list.filter((item) => !item.completed);\n    this.list = this.list.map((item, i) => ({ ...item, index: i + 1 }));\n    localStorage.setItem('todoList', JSON.stringify(this.list));\n  }\n}\n"],"names":["todos","listTodo","this","list","localStorage","getItem","JSON","parse","todo","completed","index","length","push","setItem","stringify","filter","item","map","i","renderList","todoList","forEach","description","document","querySelector","innerHTML","input","addEventListener","e","keyCode","value","trim","newTodo","addTodo","querySelectorAll","target","parentNode","id","removeTodo","innerText","updateTodo","find","checked","clearCompleted"],"sourceRoot":""}